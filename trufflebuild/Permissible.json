{
  "contractName": "Permissible",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPermissible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addPermittedAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removePermittedAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addPermittedAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPermissible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removePermittedAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addPermittedAccount(address)\":{\"details\":\"Adds the address to the list of permitted accounts. Only external accounts should be added. Adding a contract address will not be permitted to do transaction.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"isPermissible()\":{\"details\":\"Returns true if the caller is among the list of permitted accounts. Only allowed for external accounts.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removePermittedAccount(address)\":{\"details\":\"Removes or deactivate the address from the list of permitted accounts.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Permissible.sol\":\"Permissible\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0x9531e5de60e3c9c2155533ddbac79e91bdc8e5ba479a753e3607e9598f37eef1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a57620fc6b7513de6be5340e14b4e9fd33251273d564decea08147c6a5acfb3\",\"dweb:/ipfs/QmWViYxt1E3fxsRD5h57dcND65enMhS5VjZs6TtUVGtvDH\"]},\"project:/contracts/Permissible.sol\":{\"keccak256\":\"0x1f7a6f1686d7a87c4d2aff1cc7d9dc0d4913b48f13fc580c03f7d983a70ca5ee\",\"urls\":[\"bzz-raw://8fe48de8c671e010c2c2183d32519afcb355529e0c9b4057b200430b542111ca\",\"dweb:/ipfs/QmPnTFS5grg3gVrkmNbcVJ7mPGR1MgQHmypETNQxzdi26N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360018060006100df61013560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061015e565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ea8061016d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b146100c6578063db7734fb146100e4578063f2fde38b14610102578063f84817aa1461011e5761007d565b806361ebb58b14610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c600480360381019061009791906105eb565b61013a565b005b6100a66101dc565b005b6100b06102e1565b6040516100bd91906106d8565b60405180910390f35b6100ce61030a565b6040516100db91906106f3565b60405180910390f35b6100ec610361565b6040516100f991906106f3565b60405180910390f35b61011c600480360381019061011791906105eb565b6103b5565b005b610138600480360381019061013391906105eb565b610408565b005b61014261030a565b610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101789061072e565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6101e461030a565b610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a9061072e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6103bd61030a565b6103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39061072e565b60405180910390fd5b610405816104a9565b50565b61041061030a565b61044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104469061072e565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105109061070e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506105e58161079d565b92915050565b6000602082840312156105fd57600080fd5b600061060b848285016105d6565b91505092915050565b61061d8161075f565b82525050565b61062c81610771565b82525050565b600061063f60268361074e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106a560208361074e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106ed6000830184610614565b92915050565b60006020820190506107086000830184610623565b92915050565b6000602082019050818103600083015261072781610632565b9050919050565b6000602082019050818103600083015261074781610698565b9050919050565b600082825260208201905092915050565b600061076a8261077d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6107a68161075f565b81146107b157600080fd5b5056fea2646970667358221220a8a8c3179651c3cfb44ec7f0f0f1274f19ceec586f2668e945bf6dda547f61a464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638f32d59b1161005b5780638f32d59b146100c6578063db7734fb146100e4578063f2fde38b14610102578063f84817aa1461011e5761007d565b806361ebb58b14610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c600480360381019061009791906105eb565b61013a565b005b6100a66101dc565b005b6100b06102e1565b6040516100bd91906106d8565b60405180910390f35b6100ce61030a565b6040516100db91906106f3565b60405180910390f35b6100ec610361565b6040516100f991906106f3565b60405180910390f35b61011c600480360381019061011791906105eb565b6103b5565b005b610138600480360381019061013391906105eb565b610408565b005b61014261030a565b610181576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101789061072e565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6101e461030a565b610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a9061072e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6103bd61030a565b6103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f39061072e565b60405180910390fd5b610405816104a9565b50565b61041061030a565b61044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104469061072e565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105109061070e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506105e58161079d565b92915050565b6000602082840312156105fd57600080fd5b600061060b848285016105d6565b91505092915050565b61061d8161075f565b82525050565b61062c81610771565b82525050565b600061063f60268361074e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006106a560208361074e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006020820190506106ed6000830184610614565b92915050565b60006020820190506107086000830184610623565b92915050565b6000602082019050818103600083015261072781610632565b9050919050565b6000602082019050818103600083015261074781610698565b9050919050565b600082825260208201905092915050565b600061076a8261077d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6107a68161075f565b81146107b157600080fd5b5056fea2646970667358221220a8a8c3179651c3cfb44ec7f0f0f1274f19ceec586f2668e945bf6dda547f61a464736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3295:19",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:19"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:19"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:19",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:19",
                "type": ""
              }
            ],
            "src": "7:139:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:19"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:19",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:19",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:19",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:19",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:19",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:19"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:19"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:19"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:19"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:19"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:19"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:19",
                "type": ""
              }
            ],
            "src": "152:262:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:19"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:19",
                "type": ""
              }
            ],
            "src": "420:118:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:19"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:19",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:19",
                "type": ""
              }
            ],
            "src": "544:109:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:224:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "815:74:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "881:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:2:19",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "822:58:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:67:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "815:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "910:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "906:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:11:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "919:34:19",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "899:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:55:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "899:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "975:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "980:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "971:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:12:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "985:8:19",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "964:30:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1004:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1015:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1020:2:19",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1011:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1004:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "793:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "801:3:19",
                "type": ""
              }
            ],
            "src": "659:370:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1181:184:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:74:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1257:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1262:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1198:58:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:67:19"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1191:3:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1286:3:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1291:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1282:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1282:11:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1295:34:19",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1275:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1275:55:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1275:55:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1340:19:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1351:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1356:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1347:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:12:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1340:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1169:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1177:3:19",
                "type": ""
              }
            ],
            "src": "1035:330:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1469:124:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1479:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1491:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1502:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1487:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1479:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1559:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1572:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1583:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1568:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1568:17:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1515:43:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1515:71:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1515:71:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1441:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1453:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1464:4:19",
                "type": ""
              }
            ],
            "src": "1371:222:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1691:118:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1701:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1713:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1724:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1709:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1701:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1775:6:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1788:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1799:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1784:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1784:17:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1737:37:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:65:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1737:65:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1663:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1675:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1686:4:19",
                "type": ""
              }
            ],
            "src": "1599:210:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:248:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2008:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2019:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2004:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2004:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1996:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2043:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2039:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2039:17:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2062:4:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2068:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2058:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2058:20:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2032:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2032:47:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2032:47:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2088:139:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2222:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2096:124:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2096:131:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2088:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1966:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1981:4:19",
                "type": ""
              }
            ],
            "src": "1815:419:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2411:248:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2421:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2433:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2429:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2421:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2468:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2479:1:19",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2464:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:17:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2487:4:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2493:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2483:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:20:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:47:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:47:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2513:139:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2647:4:19"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2521:124:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2521:131:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2513:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2391:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2406:4:19",
                "type": ""
              }
            ],
            "src": "2240:419:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2761:73:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2778:3:19"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2783:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2771:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2771:19:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2771:19:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2799:29:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2818:3:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2823:4:19",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2814:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:14:19"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2799:11:19"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2733:3:19",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2738:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2749:11:19",
                "type": ""
              }
            ],
            "src": "2665:169:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2885:51:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2895:35:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2924:5:19"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2906:17:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:24:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2895:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2867:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2877:7:19",
                "type": ""
              }
            ],
            "src": "2840:96:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2984:48:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2994:32:19",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3019:5:19"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3012:6:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:13:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3005:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3005:21:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2994:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2966:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2976:7:19",
                "type": ""
              }
            ],
            "src": "2942:90:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3083:81:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3093:65:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3108:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3115:42:19",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3104:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3104:54:19"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3093:7:19"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3065:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3075:7:19",
                "type": ""
              }
            ],
            "src": "3038:126:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3213:79:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3270:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3279:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3282:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3272:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3272:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3272:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3236:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3261:5:19"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3243:17:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3243:24:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3233:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3233:35:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3226:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:43:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3223:2:19"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3206:5:19",
                "type": ""
              }
            ],
            "src": "3170:122:19"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "56:1223:13:-:0;;;153:65;;;;;;;;;;354:9:12;345:6;;:18;;;;;;;;;;;;;;;;;;412:6;;;;;;;;;;379:40;;408:1;379:40;;;;;;;;;;;;206:4:13;178:16;:25;195:7;:5;;;:7;;:::i;:::-;178:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;56:1223;;508:79:12;546:7;573:6;;;;;;;;;;;566:13;;508:79;:::o;56:1223:13:-;;;;;;;",
  "deployedSourceMap": "56:1223:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1319:140:12;;;:::i;:::-;;508:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;874:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:106:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:109:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;932:116:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1156:120;720:9:12;:7;:9::i;:::-;712:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1263:5:13::1;1234:16;:26;1251:8;1234:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1156:120:::0;:::o;1319:140:12:-;720:9;:7;:9::i;:::-;712:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1418:1:::1;1381:40;;1402:6;::::0;::::1;;;;;;;;1381:40;;;;;;;;;;;;1449:1;1432:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1319:140::o:0;508:79::-;546:7;573:6;;;;;;;;;;;566:13;;508:79;:::o;874:92::-;914:4;952:6;;;;;;;;;;;938:20;;:10;:20;;;931:27;;874:92;:::o;614:106:13:-;660:4;684:16;:28;701:10;684:28;;;;;;;;;;;;;;;;;;;;;;;;;677:35;;614:106;:::o;1614:109:12:-;720:9;:7;:9::i;:::-;712:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1687:28:::1;1706:8;1687:18;:28::i;:::-;1614:109:::0;:::o;932:116:13:-;720:9:12;:7;:9::i;:::-;712:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1036:4:13::1;1007:16:::0;:26:::1;1024:8;1007:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;932:116:::0;:::o;1829:229:12:-;1923:1;1903:22;;:8;:22;;;;1895:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2013:8;1984:38;;2005:6;;;;;;;;;;1984:38;;;;;;;;;;;;2042:8;2033:6;;:17;;;;;;;;;;;;;;;;;;1829:229;:::o;7:139:19:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:370::-;;822:67;886:2;881:3;822:67;:::i;:::-;815:74;;919:34;915:1;910:3;906:11;899:55;985:8;980:2;975:3;971:12;964:30;1020:2;1015:3;1011:12;1004:19;;805:224;;;:::o;1035:330::-;;1198:67;1262:2;1257:3;1198:67;:::i;:::-;1191:74;;1295:34;1291:1;1286:3;1282:11;1275:55;1356:2;1351:3;1347:12;1340:19;;1181:184;;;:::o;1371:222::-;;1502:2;1491:9;1487:18;1479:26;;1515:71;1583:1;1572:9;1568:17;1559:6;1515:71;:::i;:::-;1469:124;;;;:::o;1599:210::-;;1724:2;1713:9;1709:18;1701:26;;1737:65;1799:1;1788:9;1784:17;1775:6;1737:65;:::i;:::-;1691:118;;;;:::o;1815:419::-;;2019:2;2008:9;2004:18;1996:26;;2068:9;2062:4;2058:20;2054:1;2043:9;2039:17;2032:47;2096:131;2222:4;2096:131;:::i;:::-;2088:139;;1986:248;;;:::o;2240:419::-;;2444:2;2433:9;2429:18;2421:26;;2493:9;2487:4;2483:20;2479:1;2468:9;2464:17;2457:47;2521:131;2647:4;2521:131;:::i;:::-;2513:139;;2411:248;;;:::o;2665:169::-;;2783:6;2778:3;2771:19;2823:4;2818:3;2814:14;2799:29;;2761:73;;;;:::o;2840:96::-;;2906:24;2924:5;2906:24;:::i;:::-;2895:35;;2885:51;;;:::o;2942:90::-;;3019:5;3012:13;3005:21;2994:32;;2984:48;;;:::o;3038:126::-;;3115:42;3108:5;3104:54;3093:65;;3083:81;;;:::o;3170:122::-;3243:24;3261:5;3243:24;:::i;:::-;3236:5;3233:35;3223:2;;3282:1;3279;3272:12;3223:2;3213:79;:::o",
  "source": "pragma solidity >=0.5.16;\r\n\r\nimport './Ownable.sol';\r\n\r\ncontract Permissible is Ownable {\r\n    mapping(address => bool) private allowed_accounts;\r\n\r\n    constructor() {\r\n        allowed_accounts[owner()] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than any of the Permissibles.\r\n     */\r\n    modifier onlyPermissible() {\r\n        require(isPermissible(), \"Permissible: caller is not in the list of Permissibles\");\r\n        _;\r\n    }\r\n    /**\r\n     * @dev Returns true if the caller is among the list of permitted accounts.\r\n     * Only allowed for external accounts.\r\n     */\r\n    function isPermissible() public view returns (bool) {\r\n        return allowed_accounts[msg.sender];\r\n    }\r\n    /**\r\n     * @dev Adds the address to the list of permitted accounts.\r\n     * Only external accounts should be added.\r\n     * Adding a contract address will not be permitted to do transaction.\r\n     */\r\n    function addPermittedAccount(address _account) public onlyOwner {\r\n        allowed_accounts[_account] = true;\r\n    }\r\n    /**\r\n     * @dev Removes or deactivate the address from the list of permitted accounts.\r\n     */\r\n    function removePermittedAccount(address _account) public onlyOwner {\r\n        allowed_accounts[_account] = false;\r\n    }\r\n}",
  "sourcePath": "C:\\GitHub\\Swapify-Lottery\\contracts\\Permissible.sol",
  "ast": {
    "absolutePath": "project:/contracts/Permissible.sol",
    "exportedSymbols": {
      "Ownable": [
        3685
      ],
      "Permissible": [
        3759
      ]
    },
    "id": 3760,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3687,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:13"
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3688,
        "nodeType": "ImportDirective",
        "scope": 3760,
        "sourceUnit": 3686,
        "src": "29:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3689,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3685,
              "src": "80:7:13"
            },
            "id": 3690,
            "nodeType": "InheritanceSpecifier",
            "src": "80:7:13"
          }
        ],
        "contractDependencies": [
          3685
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3759,
        "linearizedBaseContracts": [
          3759,
          3685
        ],
        "name": "Permissible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3694,
            "mutability": "mutable",
            "name": "allowed_accounts",
            "nodeType": "VariableDeclaration",
            "scope": 3759,
            "src": "95:49:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3693,
              "keyType": {
                "id": 3691,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "95:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3692,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "114:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3704,
              "nodeType": "Block",
              "src": "167:51:13",
              "statements": [
                {
                  "expression": {
                    "id": 3702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3697,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "178:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3700,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3698,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3600,
                          "src": "195:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "195:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "178:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "206:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "178:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3703,
                  "nodeType": "ExpressionStatement",
                  "src": "178:32:13"
                }
              ]
            },
            "id": 3705,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:13"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:0:13"
            },
            "scope": 3759,
            "src": "153:65:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3715,
              "nodeType": "Block",
              "src": "352:113:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3709,
                          "name": "isPermissible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "371:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "371:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d69737369626c653a2063616c6c6572206973206e6f7420696e20746865206c697374206f66205065726d69737369626c6573",
                        "id": 3711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "388:56:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_846595753c91b290413d8f9ebab2a5e38fd32a0cd448510a3f515d5b5b838e00",
                          "typeString": "literal_string \"Permissible: caller is not in the list of Permissibles\""
                        },
                        "value": "Permissible: caller is not in the list of Permissibles"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_846595753c91b290413d8f9ebab2a5e38fd32a0cd448510a3f515d5b5b838e00",
                          "typeString": "literal_string \"Permissible: caller is not in the list of Permissibles\""
                        }
                      ],
                      "id": 3708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "363:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:82:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3713,
                  "nodeType": "ExpressionStatement",
                  "src": "363:82:13"
                },
                {
                  "id": 3714,
                  "nodeType": "PlaceholderStatement",
                  "src": "456:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3706,
              "nodeType": "StructuredDocumentation",
              "src": "226:93:13",
              "text": " @dev Throws if called by any account other than any of the Permissibles."
            },
            "id": 3716,
            "name": "onlyPermissible",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:2:13"
            },
            "src": "325:140:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "666:54:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3722,
                      "name": "allowed_accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3694,
                      "src": "684:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3725,
                    "indexExpression": {
                      "expression": {
                        "id": 3723,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "701:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "701:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "684:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3721,
                  "id": 3726,
                  "nodeType": "Return",
                  "src": "677:35:13"
                }
              ]
            },
            "documentation": {
              "id": 3717,
              "nodeType": "StructuredDocumentation",
              "src": "471:137:13",
              "text": " @dev Returns true if the caller is among the list of permitted accounts.\n Only allowed for external accounts."
            },
            "functionSelector": "db7734fb",
            "id": 3728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermissible",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:2:13"
            },
            "returnParameters": {
              "id": 3721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3720,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3728,
                  "src": "660:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3719,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:6:13"
            },
            "scope": 3759,
            "src": "614:106:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "996:52:13",
              "statements": [
                {
                  "expression": {
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3736,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "1007:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3738,
                      "indexExpression": {
                        "id": 3737,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "1024:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1007:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1036:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1007:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3741,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:33:13"
                }
              ]
            },
            "documentation": {
              "id": 3729,
              "nodeType": "StructuredDocumentation",
              "src": "726:200:13",
              "text": " @dev Adds the address to the list of permitted accounts.\n Only external accounts should be added.\n Adding a contract address will not be permitted to do transaction."
            },
            "functionSelector": "f84817aa",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3734,
                "modifierName": {
                  "id": 3733,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3611,
                  "src": "986:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "986:9:13"
              }
            ],
            "name": "addPermittedAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "961:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:18:13"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:13"
            },
            "scope": 3759,
            "src": "932:116:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3757,
              "nodeType": "Block",
              "src": "1223:53:13",
              "statements": [
                {
                  "expression": {
                    "id": 3755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3751,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "1234:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3753,
                      "indexExpression": {
                        "id": 3752,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3746,
                        "src": "1251:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1234:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1263:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1234:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3756,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:34:13"
                }
              ]
            },
            "documentation": {
              "id": 3744,
              "nodeType": "StructuredDocumentation",
              "src": "1054:96:13",
              "text": " @dev Removes or deactivate the address from the list of permitted accounts."
            },
            "functionSelector": "61ebb58b",
            "id": 3758,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3749,
                "modifierName": {
                  "id": 3748,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3611,
                  "src": "1213:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1213:9:13"
              }
            ],
            "name": "removePermittedAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "1188:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:18:13"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:13"
            },
            "scope": 3759,
            "src": "1156:120:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3760,
        "src": "56:1223:13"
      }
    ],
    "src": "0:1279:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Permissible.sol",
    "exportedSymbols": {
      "Ownable": [
        3685
      ],
      "Permissible": [
        3759
      ]
    },
    "id": 3760,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3687,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:13"
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3688,
        "nodeType": "ImportDirective",
        "scope": 3760,
        "sourceUnit": 3686,
        "src": "29:23:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3689,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3685,
              "src": "80:7:13"
            },
            "id": 3690,
            "nodeType": "InheritanceSpecifier",
            "src": "80:7:13"
          }
        ],
        "contractDependencies": [
          3685
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3759,
        "linearizedBaseContracts": [
          3759,
          3685
        ],
        "name": "Permissible",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3694,
            "mutability": "mutable",
            "name": "allowed_accounts",
            "nodeType": "VariableDeclaration",
            "scope": 3759,
            "src": "95:49:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 3693,
              "keyType": {
                "id": 3691,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "103:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "95:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 3692,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "114:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3704,
              "nodeType": "Block",
              "src": "167:51:13",
              "statements": [
                {
                  "expression": {
                    "id": 3702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3697,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "178:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3700,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3698,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3600,
                          "src": "195:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 3699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "195:7:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "178:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "206:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "178:32:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3703,
                  "nodeType": "ExpressionStatement",
                  "src": "178:32:13"
                }
              ]
            },
            "id": 3705,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:13"
            },
            "returnParameters": {
              "id": 3696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:0:13"
            },
            "scope": 3759,
            "src": "153:65:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3715,
              "nodeType": "Block",
              "src": "352:113:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3709,
                          "name": "isPermissible",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3728,
                          "src": "371:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 3710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "371:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d69737369626c653a2063616c6c6572206973206e6f7420696e20746865206c697374206f66205065726d69737369626c6573",
                        "id": 3711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "388:56:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_846595753c91b290413d8f9ebab2a5e38fd32a0cd448510a3f515d5b5b838e00",
                          "typeString": "literal_string \"Permissible: caller is not in the list of Permissibles\""
                        },
                        "value": "Permissible: caller is not in the list of Permissibles"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_846595753c91b290413d8f9ebab2a5e38fd32a0cd448510a3f515d5b5b838e00",
                          "typeString": "literal_string \"Permissible: caller is not in the list of Permissibles\""
                        }
                      ],
                      "id": 3708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "363:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:82:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3713,
                  "nodeType": "ExpressionStatement",
                  "src": "363:82:13"
                },
                {
                  "id": 3714,
                  "nodeType": "PlaceholderStatement",
                  "src": "456:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3706,
              "nodeType": "StructuredDocumentation",
              "src": "226:93:13",
              "text": " @dev Throws if called by any account other than any of the Permissibles."
            },
            "id": 3716,
            "name": "onlyPermissible",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:2:13"
            },
            "src": "325:140:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3727,
              "nodeType": "Block",
              "src": "666:54:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3722,
                      "name": "allowed_accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3694,
                      "src": "684:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 3725,
                    "indexExpression": {
                      "expression": {
                        "id": 3723,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "701:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "701:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "684:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3721,
                  "id": 3726,
                  "nodeType": "Return",
                  "src": "677:35:13"
                }
              ]
            },
            "documentation": {
              "id": 3717,
              "nodeType": "StructuredDocumentation",
              "src": "471:137:13",
              "text": " @dev Returns true if the caller is among the list of permitted accounts.\n Only allowed for external accounts."
            },
            "functionSelector": "db7734fb",
            "id": 3728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermissible",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:2:13"
            },
            "returnParameters": {
              "id": 3721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3720,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3728,
                  "src": "660:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3719,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:6:13"
            },
            "scope": 3759,
            "src": "614:106:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "996:52:13",
              "statements": [
                {
                  "expression": {
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3736,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "1007:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3738,
                      "indexExpression": {
                        "id": 3737,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "1024:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1007:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1036:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1007:33:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3741,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:33:13"
                }
              ]
            },
            "documentation": {
              "id": 3729,
              "nodeType": "StructuredDocumentation",
              "src": "726:200:13",
              "text": " @dev Adds the address to the list of permitted accounts.\n Only external accounts should be added.\n Adding a contract address will not be permitted to do transaction."
            },
            "functionSelector": "f84817aa",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3734,
                "modifierName": {
                  "id": 3733,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3611,
                  "src": "986:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "986:9:13"
              }
            ],
            "name": "addPermittedAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3743,
                  "src": "961:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:18:13"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:13"
            },
            "scope": 3759,
            "src": "932:116:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3757,
              "nodeType": "Block",
              "src": "1223:53:13",
              "statements": [
                {
                  "expression": {
                    "id": 3755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3751,
                        "name": "allowed_accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "1234:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 3753,
                      "indexExpression": {
                        "id": 3752,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3746,
                        "src": "1251:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1234:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1263:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1234:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3756,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:34:13"
                }
              ]
            },
            "documentation": {
              "id": 3744,
              "nodeType": "StructuredDocumentation",
              "src": "1054:96:13",
              "text": " @dev Removes or deactivate the address from the list of permitted accounts."
            },
            "functionSelector": "61ebb58b",
            "id": 3758,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3749,
                "modifierName": {
                  "id": 3748,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3611,
                  "src": "1213:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1213:9:13"
              }
            ],
            "name": "removePermittedAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3746,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "1188:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:18:13"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1223:0:13"
            },
            "scope": 3759,
            "src": "1156:120:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3760,
        "src": "56:1223:13"
      }
    ],
    "src": "0:1279:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-03-21T21:36:30.531Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addPermittedAccount(address)": {
        "details": "Adds the address to the list of permitted accounts. Only external accounts should be added. Adding a contract address will not be permitted to do transaction."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "isPermissible()": {
        "details": "Returns true if the caller is among the list of permitted accounts. Only allowed for external accounts."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removePermittedAccount(address)": {
        "details": "Removes or deactivate the address from the list of permitted accounts."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}